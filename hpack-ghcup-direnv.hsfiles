{-# START_FILE package.yaml #-}
name:                {{name}}
version:             0.1.0.0
#synopsis:
#description:
homepage:            https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme
license:             BSD3
author:              {{author-name}}{{^author-name}}Author name here{{/author-name}}
maintainer:          {{author-email}}{{^author-email}}example@example.com{{/author-email}}
copyright:           {{copyright}}{{^copyright}}{{year}}{{^year}}2022{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}
category:            {{category}}{{^category}}Web{{/category}}
extra-source-files:
- README.md
- CHANGELOG.md

dependencies:
  - base >= 4.7 && < 5

ghc-options:
  - -j
  - -Wall
  - -Wcompat
  - -Widentities
  - -Wpartial-fields
  - -Wincomplete-uni-patterns
  - -Wincomplete-record-updates
  - -Wredundant-constraints
  - -Werror=inaccessible-code
  - -Werror=overlapping-patterns
  - -Werror=incomplete-patterns
  - -Werror=missing-methods
  - -Werror=missing-fields
  - -fhide-source-paths
  - -fno-warn-name-shadowing

default-extensions: []

library:
  source-dirs: src

_executable-ghc-options: &executable-ghc-options
  - -threaded
  - -rtsopts
  - -with-rtsopts=-N
  - -O2

executables:
  {{name}}:
    source-dirs:      app
    main:             Main.hs
    dependencies:
      - {{name}}
    ghc-options: *executable-ghc-options

tests:
  spec:
    main: Spec.hs
    source-dirs: test
    dependencies:
      - {{name}}
      - HUnit
      - hedgehog
      - tasty
      - tasty-hedgehog
      - tasty-hunit
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N4


{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain


{-# START_FILE src/Lib.hs #-}
module Lib where


{-# START_FILE app/Main.hs #-}
module Main where

main :: IO ()
main = putStrLn "Hello world"


{-# START_FILE test/Spec.hs #-}
module Main (main) where

import           Test.Tasty

main :: IO ()
main = defaultMain $ testGroup "Tests"
  [ testGroup "Unit tests" unitTests
  , testGroup "Property tests" propertyTests
  ]

unitTests :: [TestTree]
unitTests = []

propertyTests :: [TestTree]
propertyTests = []


{-# START_FILE README.md #-}
# {{name}}


{-# START_FILE CHANGELOG.md #-}
# Changelog for {{name}}

All notable changes to this project will be documented in this file.

The format is based on
[Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to the
[Haskell Package Versioning Policy](https://pvp.haskell.org/).

## Unreleased

## 0.1.0.0 - YYYY-MM-DD


{-# START_FILE LICENSE #-}
Copyright {{author-name}}{{^author-name}}Author name here{{/author-name}} (c) {{year}}{{^year}}2022{{/year}}

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of {{author-name}}{{^author-name}}Author name here{{/author-name}} nor the names of other
      contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


{-# START_FILE tools.sh #-}
#!/usr/bin/env bash
stack build hlint hoogle


{-# START_FILE .bin/run #-}
#!/usr/bin/env bash

set -u

cmd="ghcup run --quick --ghc $ghc --hls $hls --stack $stack --cabal $cabal -- $@"
echo "$cmd"
exec $cmd


{-# START_FILE .bin/runstack #-}
#!/usr/bin/env bash

set -u

cmd="ghcup run --quick --ghc $ghc --hls $hls --stack $stack --cabal $cabal -- stack --system-ghc $@"
echo "$cmd"
exec $cmd


{-# START_FILE .bin/runstackexec #-}
#!/usr/bin/env bash

set -u

cmd="ghcup run --quick --ghc $ghc --hls $hls --stack $stack --cabal $cabal -- stack exec --system-ghc -- $@"
echo "$cmd"
exec $cmd


{-# START_FILE .bin/hlint #-}
#!/usr/bin/env bash

runstackexec hlint $@


{-# START_FILE .bin/hoogle #-}
#!/usr/bin/env bash

runstackexec hoogle $@


{-# START_FILE .envrc #-}
#!/usr/bin/env bash

export ghc=9.2.5
export hls=1.9.0.0
export stack=2.9.3
export cabal=3.6.2.0

export PATH="$PWD/.bin:$PATH"

RED='\033[0;31m'
NC='\033[0m' # No Color

# Check if selected versions of tools are installed
declare -A tools
tools+=(
   [GHC]=$ghc
   [HLS]=$hls
   [Stack]=$stack
   [Cabal]=$cabal
 )
for tool in ${!tools[@]}; do
  version=${tools[$tool]}
  ghcup list \
    --tool $tool \
    --show-criteria installed \
    --raw-format \
    2> /dev/null | \
    cut -d ' ' -f 2 | \
    grep -q $version || \
    printf "${RED}Warning: The environment specifies $tool version $version, but it is not installed${NC}.\n"
done


